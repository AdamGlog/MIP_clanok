%hlavny zdroj
@incollection{amatriain2015recommender,
  title     = {Recommender systems in industry: A netflix case study},
  author    = {Amatriain, Xavier and Basilico, Justin},
  booktitle = {Recommender systems handbook},
  pages     = {385--419},
  year      = {2015},
  publisher = {Springer}
}

@article{Steck_Baltrunas_Elahi_Liang_Raimond_Basilico_2021,
  title        = {Deep Learning for Recommender Systems: A Netflix Case Study},
  volume       = {42},
  url          = {https://ojs.aaai.org/aimagazine/index.php/aimagazine/article/view/18140},
  doi          = {10.1609/aimag.v42i3.18140},
  abstractnote = {&lt;p&gt;Deep learning has profoundly impacted many areas of machine learning. However, it took a while for its impact to be felt in the field of recommender systems. In this article, we outline some of the challenges encountered and lessons learned in using deep learning for recommender systems at Netflix. We first provide an overview of the various recommendation tasks on the Netflix service. We found that different model architectures excel at different tasks. Even though many deep-learning models can be understood as extensions of existing (simple) recommendation algorithms, we initially did not observe significant improvements in performance over well-tuned non-deep-learning approaches. Only when we added numerous features of heterogeneous types to the input data, deep-learning models did start to shine in our setting. We also observed that deep-learning methods can exacerbate the problem of offline–online metric (mis-)alignment. After addressing these challenges, deep learning has ultimately resulted in large improvements to our recommendations as measured by both offline and online metrics. On the practical side, integrating deep-learning toolboxes in our system has made it faster and easier to implement and experiment with both deep-learning and non-deep-learning approaches for various recommendation tasks. We conclude this article by summarizing our take-aways that may generalize to other applications beyond Netflix.&lt;/p&gt;},
  number       = {3},
  journal      = {AI Magazine},
  author       = {Steck, Harald and Baltrunas, Linas and Elahi, Ehtsham and Liang, Dawen and Raimond, Yves and Basilico, Justin},
  year         = {2021},
  month        = {Nov.},
  pages        = {7-18}
}
@article{10.1145/2843948,
  author     = {Gomez-Uribe, Carlos A. and Hunt, Neil},
  title      = {The Netflix Recommender System: Algorithms, Business Value, and Innovation},
  year       = {2016},
  issue_date = {January 2016},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {6},
  number     = {4},
  issn       = {2158-656X},
  url        = {https://doi.org/10.1145/2843948},
  doi        = {10.1145/2843948},
  abstract   = {This article discusses the various algorithms that make up the Netflix recommender system, and describes its business purpose. We also describe the role of search and related algorithms, which for us turns into a recommendations problem as well. We explain the motivations behind and review the approach that we use to improve the recommendation algorithms, combining A/B testing focused on improving member retention and medium term engagement, as well as offline experimentation using historical member engagement data. We discuss some of the issues in designing and interpreting A/B tests. Finally, we describe some current areas of focused innovation, which include making our recommender system global and language aware.},
  journal    = {ACM Trans. Manage. Inf. Syst.},
  month      = dec,
  articleno  = {13},
  numpages   = {19},
  keywords   = {Recommender systems}
}
@misc{EncyclopaediaBritannica,
  author       = {Ken Stewart},
  title        = {Mean squared error},
  howpublished = {\url{https://www.britannica.com/science/mean-squared-error}},
  note         = {Citované: 03.11.2024}
}